# TODO –∑–¥–µ—Å—å –ø–∏—Å–∞—Ç—å –∫–æ–¥
import random
class Potato:
    states = {0: '–û—Ç—Å—É—Å—Ç–≤—É–µ—Ç',
              1: '–†–æ—Å—Ç–æ–∫',
              2: '–ó–µ–ª–µ–Ω–∞—è',
              3: '–ó—Ä–µ–ª–∞—è'
              }

    def __init__(self, index):
        self.index = index
        self.state = 0

    def grow(self):
        if self.state < 3:
            self.state += 1
        self.print_state()

    def is_ripe(self):
        if self.state == 3:
            return True
        return False

    def print_state(self):
        print('–ö–∞—Ä—Ç–æ—à–∫–∞ {} —Å–µ–π—á–∞—Å {}'.format(self.index, Potato.states[self.state]))


class Gardener:
    name = 'Bob üö∂'
    life_count = 100
    damage = 20


class Pests:
    name = 'ü¶óüêõü¶óüêõü¶óüêõ'
    life_count = 100
    damage = 20
class Potato_garden:

    def __init__(self, count):
        self.potatoes = [Potato(index) for index in range(1, count + 1)]

    def watering(self):
        potato_watering = input('–ù—É–∂–Ω–æ –ø–æ–ª–∏—Ç—å –∫–∞—Ä—Ç–æ—à–∫—É! –î–∞ –∏–ª–∏ –ù–µ—Ç: ').lower()
        if potato_watering == '–¥–∞' or potato_watering == 'lf':
            my_garde.pests()
        elif potato_watering == '–Ω–µ—Ç' or potato_watering == 'ytn':
            print('–í–∞—à–∞ –∫–∞—Ä—Ç–æ—à–∫–∞ –ø–æ–≥–∏–±–ª–∞, —Ç–∞–∫ –∏ –Ω–µ –¥–æ–∂–¥–∞–≤—à–∏—Å—å –≤–æ–¥—ã...')
            raise SystemExit

    def pests(self):
        num_pests = random.randint(1, 3)
        if num_pests == 2:
            print('–ù–∞–ø–∞–ª–∏ –≤—Ä–µ–¥–∏—Ç–µ–ª–∏ {}\n'.format(Pests.name))
            pests_control = input('–ù—É–∂–Ω–∞ –≤–∞—à–∞ –ø–æ–º–æ—â—å!\n'
                                  '–ü–æ–º–æ—á—å –∫–∞—Ä—Ç–æ—à–∫–µ? –î–∞ –∏–ª–∏ –ù–µ—Ç: ')
            if pests_control == '–¥–∞' or pests_control == 'lf':
                my_battle.combat_vs_pests()
            if pests_control == '–Ω–µ—Ç' or pests_control == 'ytn':
                print('–í–∞—à—É –∫–∞—Ä—Ç–æ—à–∫—É —Å—ä–µ–ª–∏ –≤—Ä–µ–¥–∏–µ–ª–∏ {}. –í–∞—à–∞ –¥–µ—Ä–µ–≤–Ω—è –æ–±—Ä–µ—á–µ–Ω–∞!'.format(Pests.name))
                raise SystemExit
        else:
            my_garde.potato_patch()

    def potato_patch(self):
        print('–ö–∞—Ä—Ç–æ—à–∫–∞ –ø—Ä–æ—Ä–∞—Å—Ç–∞–µ—Ç!')
        for i_potato in self.potatoes:
            i_potato.grow()

    def are_all_ripe(self):
        if all([i_potato.is_ripe() for i_potato in self.potatoes]):
            print('–í—ã —Å–ø—Ä–∞–≤–∏–ª–∏—Å—å —Å–æ —Å–≤–æ–∏–º–∏ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç—è–º–∏!\n'
                  '–ö–∞—Ä—Ç–æ—à–∫–∞ —Å–æ–∑—Ä–µ–ª–∞! –ú–æ–∂–Ω–æ —Å–æ–±–∏—Ä–∞—Ç—å.\n')
        else:
            print('–ï—â–µ –Ω–µ —Å–æ–∑—Ä–µ–ª–∞!\n')


class Combat:
    def combat_vs_pests(self):
        print('–î–∞ –Ω–∞—á–Ω–µ—Ç—Å—è –±–∏—Ç–≤–∞...')
        man_life = Gardener.life_count
        pests_life = Pests.life_count
        print('–ö–æ–ª-–≤–æ –∂–∏–∑–Ω–µ–π —Å–∞–¥–æ–≤–Ω–∏–∫–∞: ', man_life)
        print('–ö–æ–ª-–≤–æ –∂–∏–∑–Ω–µ–π –≤—Ä–µ–¥–∏—Ç–µ–ª–µ–π: ', pests_life)
        next_step = input('–ù–∞–∂–º–∏—Ç–µ Enter\n')

        while True:
            print('–°–∞–¥–æ–≤–Ω–∏–∫ {} –Ω–∞–Ω–µ—Å —É–¥–∞—Ä: {}'.format(Gardener.name, Gardener.damage))
            pests_life -= Gardener.damage
            if pests_life <= 0:
                print('–í—ã –æ—Ç–±–∏–ª–∏—Å—å –æ—Ç –≤—Ä–µ–¥–∏—Ç–µ–ª–µ–π. –ù–æ –æ–Ω–∏ –æ–±–µ—â–∞–ª–∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è...')
                my_garde.potato_patch()
                break
            elif pests_life < 40:
                pest_reinforcement = random.randint(1, 3)
                if pest_reinforcement == 1:
                    print('–ö–æ–ª-–≤–æ –∂–∏–∑–Ω–µ–π –≤—Ä–µ–¥–∏—Ç–µ–ª–µ–π: ', pests_life)
                    print('–ü–∞—Ä–∞–∑–∏—Ç—ã —Å–±–µ–∂–∞–ª–∏ —Å –ø–æ–ª—è –±–∏—Ç–≤—ã —Å –±–æ–ª—å—à–∏–º–∏ –ø–æ—Ç–µ—Ä—è–º–∏!\n')
                    my_garde.potato_patch()
                    break
                if pest_reinforcement == 3:
                    reinforcement_pests = 30
                    pests_life += reinforcement_pests
                    print(f'–ö –æ—Ç—Ä—è—É –≤—Ä–µ–¥–∏—Ç–µ–ª–µ–π –ø—Ä–∏–±—ã–ª–æ –ø–æ–¥–∫—Ä–µ–ø–ª–µ–Ω–∏–µ +{reinforcement_pests}')
            print('–ö–æ–ª-–≤–æ –∂–∏–∑–Ω–µ–π –≤—Ä–µ–¥–∏—Ç–µ–ª–µ–π: ', pests_life)

            print('–í—Ä–µ–¥–∏—Ç–µ–ª–∏ {} –Ω–∞–Ω–µ—Å–ª–∏ —É–¥–∞—Ä: {}'.format(Pests.name, Pests.damage))
            man_life -= Pests.damage
            print('–ö–æ–ª-–≤–æ –∂–∏–∑–Ω–µ–π —Å–∞–¥–æ–≤–Ω–∏–∫–∞: ', man_life)
            stop = input('–ù–∞–∂–º–∏—Ç–µ Enter\n')

            if man_life <= 0:
                print('–í—ã –æ—Ç–≤–∞–∂–Ω–æ —Å—Ä–∞–∂–∞–ª–∏—Å—å ... –Ω–æ –±–µ–∑—Ä–µ–∑—É–ª—å—Ç–∞—Ç–Ω–æ. –ü–∞—Ä–∞–∑–∏—Ç—ã —Ç–æ—Ä–∂–µ—Å—Ç–≤—É—é—Ç!')
                raise SystemExit

            elif man_life < 40:
                ans_man = input('–ñ–∏–∑–Ω–∏ —Å—Ç–∞–ª–æ –º–µ–Ω—å—à–µ –ø–æ–ª–æ–≤–∏–Ω—ã! –°–±–µ–∂–∞—Ç—å —Å –ø–æ–ª—è –±–∏—Ç–≤—ã: –î–∞ –∏–ª–∏ –ù–µ—Ç').lower()
                if ans_man == '–¥–∞' or ans_man == 'lf':
                    print('–í—ã —Å–±–µ–∂–∞–ª–∏ —Å –ø–æ–ª—è –±–∏—Ç–≤—ã, –±—Ä–æ—Å–∏–≤ –¥–æ–≤–µ—Ä–µ–Ω–Ω—É—é –í–∞–º –∫–∞—Ä—Ç–æ—à–∫—É! –ü–∞—Ä–∞–∑–∏—Ç—ã —Ç–æ—Ä–∂–µ—Å—Ç–≤—É—é—Ç!')
                    raise SystemExit
                if ans_man == '–Ω–µ—Ç' or ans_man == 'ytn':
                    man_reinforcement = random.randint(1, 3)
                    if man_reinforcement == 2:
                        reinforcement_man = 50
                        man_life += reinforcement_man
                        print(f'–ë–∞–±–∞ –í–∞—Ä—è, –≤–∞—à–∞ —Å–æ—Å–µ–¥–∫–∞ –ø—Ä–∏–Ω–µ—Å–ª–∞ –≤–∞–º üç∫(—ç—Ç–æ –≤–æ–¥–∞:)).\n'
                              f'–ñ–∏–∑–Ω—å —Å–∞–¥–æ–≤–Ω–∏–∫–∞ —É–≤–µ–ª–∏—á–∏–ª–∞—Å—å –Ω–∞ {reinforcement_man}')






num_potatos = int(input('–°–∫–æ–ª—å–∫–æ –∫–∞—Ä—Ç–æ—à–∫–∏ –±—É–¥–µ–º —Å–∞–∂–∞—Ç—å: '))
my_garde = Potato_garden(num_potatos)
my_battle = Combat()
print('–ù–∞ –í–∞—Å –≤–æ–∑–ª–æ–∂–µ–Ω–Ω–∞ –±–æ–ª—å—à–∞—è –º–∏—Å—Å–∏—è! \n–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∫–∞—Ä—Ç–æ—à–∫—É!')

for _ in range(3):
    my_garde.watering()  # –ø–æ–ª–∏–≤ –∫–∞—Ä—Ç–æ—à–∫–∏
    my_garde.are_all_ripe()
